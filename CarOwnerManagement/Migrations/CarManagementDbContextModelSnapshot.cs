// <auto-generated />
using CarOwnerManagement;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarOwnerManagement.Migrations
{
    [DbContext(typeof(CarManagementDbContext))]
    partial class CarManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarOwner", b =>
                {
                    b.Property<int>("CarsId")
                        .HasColumnType("int");

                    b.Property<int>("OwnersId")
                        .HasColumnType("int");

                    b.HasKey("CarsId", "OwnersId");

                    b.HasIndex("OwnersId");

                    b.ToTable("CarOwners", (string)null);

                    b.HasData(
                        new
                        {
                            CarsId = 1,
                            OwnersId = 3
                        },
                        new
                        {
                            CarsId = 2,
                            OwnersId = 2
                        },
                        new
                        {
                            CarsId = 3,
                            OwnersId = 1
                        },
                        new
                        {
                            CarsId = 4,
                            OwnersId = 2
                        },
                        new
                        {
                            CarsId = 4,
                            OwnersId = 3
                        });
                });

            modelBuilder.Entity("CarOwnerManagement.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FuelType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A high-performance luxury electric sedan with impressive acceleration, long range, and Autopilot capabilities.",
                            FuelType = 3,
                            Name = "Tesla Model S"
                        },
                        new
                        {
                            Id = 2,
                            Description = "America’s best-selling full-size pickup truck, known for its durability, towing capacity, and versatility.",
                            FuelType = 1,
                            Name = "Ford F-150"
                        },
                        new
                        {
                            Id = 3,
                            Description = "A powerful and reliable diesel pickup truck designed for heavy-duty work and off-road capability.",
                            FuelType = 2,
                            Name = "Chevrolet Silverado 1500"
                        },
                        new
                        {
                            Id = 4,
                            Description = "A luxury electric sedan with a spacious interior, autonomous driving, and a state-of-the-art infotainment system.",
                            FuelType = 1,
                            Name = "Porsche 911"
                        },
                        new
                        {
                            Id = 5,
                            Description = "A sporty and luxurious electric sedan combining BMW’s signature driving dynamics with zero emissions.",
                            FuelType = 3,
                            Name = "BMW i4"
                        });
                });

            modelBuilder.Entity("CarOwnerManagement.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Neo Anderson"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Darth Wader"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Gandalf Grey"
                        });
                });

            modelBuilder.Entity("CarOwner", b =>
                {
                    b.HasOne("CarOwnerManagement.Models.Car", null)
                        .WithMany()
                        .HasForeignKey("CarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarOwnerManagement.Models.Owner", null)
                        .WithMany()
                        .HasForeignKey("OwnersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
